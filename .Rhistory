q()
q()
q()
view(mtcars)
view(mpg)
install.packages("tidyverse")
install.packages("jsonlite")
view(mpg)
mtcars
mtcars
ggplot(mtcars,aes(x=wt))+geom_density()
install.packages("jsonlite")
ggplot(mtcars,aes(x=wt))+geom_density()
ggplot(mtcars,aes(x=wt)) + geom_density()
ggplot(mtcars,aes(x=wt)) + geom_density()
# boxplot
plt <- ggplot(mpg,aes(x=manufacturer,y=hwy))
install.packages("tidyverse")
install.packages("jsonlite")
install.packages("tidyverse")
install.packages("jsonlite")
# heatmap2
mpg_summary <- mpg %>% group_by(model,year) %>% summarize(Mean_Hwy = mean(hwy), groups="keep")
install.packages("dplyr")
install.packages("dplyr")
sample_table<- population_table %>% sample_n(50)
install.packages("tidyverse")
install.packages("jsonlite")
install.packages("dplyr")
ggplot(mtcars,aes(x=wt))+geom_density()
install.packages("ggplot2")
# boxplot
plt <- ggplot(mpg,aes(x=manufacturer,y=hwy))
plt + geom_boxplot() + theme(axis.text.x=element_text(angle=45,hjust=1)) + geom_point()
library(ggplot2)
# boxplot
plt <- ggplot(mpg,aes(x=manufacturer,y=hwy))
plt + geom_boxplot() + theme(axis.text.x=element_text(angle=45,hjust=1)) + geom_point()
ggplot(mtcars,aes(x=wt))+geom_density()
mtcars
shapiro.test(mtcars$wt)
sample(5)
sample_n(5)
population_table<- read.csv("used_car_data.csv",check.names=F,stringsAsFactors=F)
plt <- ggplot(population_table, aes(x=log10(Miles_Driven)))
setwd("C:/DataUoT/R_Analysis/01_Demo")
population_table<- read.csv("used_car_data.csv",check.names=F,stringsAsFactors=F)
plt <- ggplot(population_table, aes(x=log10(Miles_Driven)))
plt + geom_density()
sample_table<- population_table %>% sample_n(50)
# heatmap
mpg_summary <- mpg %>% group_by(class,year) %>% summarize(Mean_Hwy = mean(hwy), groups="keep")
install.packages("dplyr")
install.packages("dplyr")
install.packages("tidyverse")
sample(c("cow", "deer", "pig", "chicken", "duck", "sheep", "dog"), 4)
num_rows<- 1:nrow(demo_table)
num_rows
sample_rows<-sample(num_rows,3)
sample_rows
demo_table[sample_rows,]
demo_table <- demo_table %>% mutate(Mileage_per_Year=Total_Miles/(2020-Year),IsActive=TRUE) #add columns to original data frame
demo_table <- demo_table %>% mutate(Mileage_per_Year=Total_Miles/(2020-Year),IsActive=TRUE) #add columns to original data frame
demo_table
#summarize_demo<- demo_table2 %>% group_by(condition) %>% summarize(Mean_Mileage = mean(odometer), .groups = "keep")
summarize_demo<- demo_table2 %>% group_by(condition) %>% summarize(Mean_Mileage=mean(odometer), Maximum_Price = max(price), Num_Vehicles = n(), .groups = "keep")
library(tidyverse)
# column plot
mpg_summary<-mpg %>% group_by(manufacturer) %>% summarize(Vehicle_Count = n(), .groups = "keep")
population_table<- read.csv("used_car_data.csv",check.names=F,stringsAsFactors=F)
plt <- ggplot(population_table, aes(x=log10(Miles_Driven)))
plt + geom_density()
sample_table <- population_table %>% sample_n(50)
plt <- ggplot(sample_table,aes(x=log10(Miles_Driven)))
plt + gemo_density()
library(ggplot2)
plt + gemo_density()
sample_table <- population_table %>% sample_n(50)
plt <- ggplot(sample_table,aes(x=log10(Miles_Driven)))
plt + geom_density()
sample_table <- population_table %>% sample_n(50)
plt <- ggplot(sample_table,aes(x=log10(Miles_Driven)))
plt + geom_density()
shapiro.test(mtcars$wt)
sample(5)
sample_n(5)
population_table<- read.csv("used_car_data.csv",check.names=F,stringsAsFactors=F)
plt <- ggplot(population_table, aes(x=log10(Miles_Driven)))
plt + geom_density()
sample_table <- population_table %>% sample_n(50)
plt <- ggplot(sample_table,aes(x=log10(Miles_Driven)))
plt + geom_density()
population_table<- read.csv("used_car_data.csv",check.names=F,stringsAsFactors=F)
plt <- ggplot(population_table, aes(x=log10(Miles_Driven)))
plt + geom_density()
sample_table <- population_table %>% sample_n(50)
plt <- ggplot(sample_table,aes(x=log10(Miles_Driven)))
plt + geom_density()
sample_table <- population_table %>% sample_n(50)
plt <- ggplot(sample_table,aes(x=log10(Miles_Driven)))
plt + geom_density()
sample_table <- population_table %>% sample_n(50)
plt <- ggplot(sample_table,aes(x=log10(Miles_Driven)))
plt + geom_density()
sample_table <- population_table %>% sample_n(50)
plt <- ggplot(sample_table,aes(x=log10(Miles_Driven)))
plt + geom_density()
sample_table <- population_table %>% sample_n(50)
plt <- ggplot(sample_table,aes(x=log10(Miles_Driven)))
plt + geom_density()
?t.test()
t.test(log10(sample_table$Miles_Driven),mu=mean(log10(population_table$Miles_driven)))
t.test(log10(sample_table$Miles_Driven),mu=mean(log10(population_table$Miles_Driven)))
mu=mean(log10(population_table$Miles_Driven))
sample_table2 <- population_table %>% sample_n(50)
t.test(log10(sample_table$Miles_Driven),log10(sample_table2$Miles_Driven))
t.test(log10(sample_table$Miles_Driven),log10(sample_table2$Miles_Driven))
population1= rnorm(1000)
population2=sample(population1,200)
t.test(population2,mu=mean(population1)))
t.test(population2,mu=mean(population1))
population3 = rnorm(1000,-2)
t.test(population2,mu=mean(population3))
population4 = rnorm(1000)
population4 = rnorm(1000)
population5 = rnorm(1000)
t.test(population4,population5)
set.seed(42)
population4 = rnorm(1000)
population5 = rnorm(1000)
t.test(population4,population5)
set.seed(42)
population4 = rnorm(1000)
population5 = rnorm(1000)
t.test(population4,population5)
population6 = rnorm(1000)
population7 = rnorm(1000, -2)
t.test(population6,population7)
setwd("C:/DataUoT/UTOR-VIRT-DATA-PT-12-2021-U-B/15-R/2/Activities/03-Stu_Sardines")
file<-read.csv(file='/Resources/sardines.csv',check.names=F,stringsAsFactors=F)
file<-read.csv(file='\Resources\sardines.csv',check.names=F,stringsAsFactors=F)
setwd("C:/DataUoT/UTOR-VIRT-DATA-PT-12-2021-U-B/15-R/2/Activities/03-Stu_Sardines/Resources")
file<-read.csv(file='sardines.csv',check.names=F,stringsAsFactors=F)
sardines <- read.csv(file="../Resources/sardines.csv")
View(sardines)
View(sardines)
View(sardines)
View(sardines)
View(sardines)
View(sardines)
sardines_mean<-mean(sardines$vertebrae)
View(sample_table2)
View(sardines)
View(sardines)
Alaska_data<- subset(sardines,location=="1")
View(Alaska_data)
View(Alaska_data)
san_diego<-mean(subset(sardiness,location=="3"))
san_diego<-mean(subset(sardines,location=="3"))
san_diego<-subset(sardines,location=="3")
san_diego_mean<-mean(san_diego$vertebrae)
View(san_diego)
t.test(Alaska_data$vertebrae,mu=sardines_mean)
t.test(Alaska_data$vertebrae,san_diego$vertebrae)
sardines <- read.csv(file="../Resources/sardines.csv")
sardines_mean<-mean(sardines$vertebrae)
Alaska_data<- subset(sardines,location=="1")
san_diego<-subset(sardines,location=="6")
san_diego_mean<-mean(san_diego$vertebrae)
t.test(Alaska_data$vertebrae,mu=sardines_mean)
t.test(Alaska_data$vertebrae,san_diego$vertebrae)
t.test(Alaska_data$vertebrae,mu=sardines_mean)
t.test(Alaska_data$vertebrae,san_diego$vertebrae)
library(tidyverse)
mosquito <- read.csv(file="04-Ins_ANOVA/Resources/mosquito.csv")
setwd("C:/DataUoT/UTOR-VIRT-DATA-PT-12-2021-U-B/15-R/2/Activities")
mosquito <- read.csv(file="04-Ins_ANOVA/Resources/mosquito.csv")
ggplot(mosquito,aes(x=factor(treatment),y=mosq)) + geom_boxplot()
# aov performs the analysis of variance, but does not provide a p-value
aov(mosq ~ factor(treatment), data=mosquito)
# to obtain a p-value, wrap aov() with a summary() function
summary(aov(mosq ~ factor(treatment), data=mosquito))
View(mosquito)
setwd("C:/DataUoT/UTOR-VIRT-DATA-PT-12-2021-U-B/15-R/2/Activities/05-Stu_ANOVA")
# Read in the CSV file.
hair <- read.csv(file="../Resources/hair.csv")
setwd("C:/DataUoT/UTOR-VIRT-DATA-PT-12-2021-U-B/15-R/2/Activities/05-Stu_ANOVA/Resources")
library(ggplot2)
# Read in the CSV file.
hair <- read.csv(file="../Resources/hair.csv")
View(hair)
?t.test
?aov
View(mosquito)
View(mosquito)
mtcars_filt <- mtcars[,c("hp","cy1")]
mtcars
install.packages("tidyverse")
install.packages("tidyverse")
mtcars_filt <- mtcars[,c("hp","cy1")]
mtcars_filt <- mtcars[,c("hp","cyl")]
?factor
mtcars_filt$cyl <- factor(mtcars_filt$cyl)
mtcars_filt$cyl
aov(hp ~ cyl, data=matcars_filt)
aov(hp ~ cyl, data=mtcars_filt)
summary(aov(hp~cyl,data=mtcars_filt))
?cor
head(mtcars)
plt<- ggplot(mtcars,aes(x=hp, y=qsec))
library(ggplot2)
plt<- ggplot(mtcars,aes(x=hp, y=qsec))
plt+geom_points()
plt+geom_point()
cor(mtcars$hp,mtcars$qsec)
setwd("C:/DataUoT/R_Analysis/01_Demo")
used_car<-read.csv("used_car_data.csv", stringsAsFactors = F)
head(used_car)
used_car<-read.csv("used_car_data.csv", stringsAsFactors = F)
head(used_car)
plt<-ggplot(used_car,aes(x=Miles_Driven,y=Selling_Price))
plt + geo_point()
plt + geom_point()
cor(used_car$Miles_Driven,used_car$Selling_Price)
used_matrix<- as.matrix(used_car[,c("Seeling_Price","Miles_Driven")])
cor(used_matrix)
used_matrix<- as.matrix(used_car[,c("Seeling_Price","Miles_Driven")])
used_matrix<- as.matrix(used_car[,c("Selling_Price","Miles_Driven")])
cor(used_matrix)
used_matrix<- as.matrix(used_car[,c("Selling_Price","Present_Price","Miles_Driven")])
cor(used_matrix)
?lm()
lm(qsec~hp,mtcars)
summary(lm(qsec~hp,mtcars))
summary(lm(hp~qsec,mtcars))
lm(qsec~hp,mtcars)
model<-lm(qsec ~hp,mtcars)
yvals<-model$coefficients["hp"]*mtcars$hp
plt<-ggplot(mtcars,aes(x=hp,y=qsec))
plt<-ggplot(mtcars,aes(x=hp,y=qsec))
plt+geom_pint()+geom_line(aes(y=yvals),color = "red")
plt+geom_point()+geom_line(aes(y=yvals),color = "red")
lm(qsec~hp,mtcars)
model<-lm(qsec ~hp,mtcars)
yvals<-model$coefficients["hp"]*mtcars$hp
plt<-ggplot(mtcars,aes(x=hp,y=qsec))
yvals<-model$coefficients["hp"]*mtcars$hp + model$coefficients["(Intercept)"]
plt<-ggplot(mtcars,aes(x=hp,y=qsec))
plt+geom_point()+geom_line(aes(y=yvals),color = "red")
lm(qsec~ mpg + disp+drat + wt+hp, data=mtcars)
summary(lm(qsec~ mpg + disp+drat + wt+hp, data=mtcars))
?chisq.test()
mpg
table(mpg$class,mgp$year)
table(mpg$class,mpg$year)
chisq.test(tbl)
tbl<-table(mpg$class,mpg$year)
chisq.test(tbl)
setwd("C:/DataUoT/R_Analysis")
library(dplyr)
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
library(dplyr)
View(sardines)
df<- read.csv("MechaCar",check.names = F, stringsAsFactors = F)
df<- read.csv("MechaCar_mpg.csv",check.names = F, stringsAsFactors = F)
df
mtcars
head(car_df)
#import csv file and read as dataframe
car_df<- read.csv("MechaCar_mpg.csv",check.names = F, stringsAsFactors = F)
head(car_df)
#create multiple linear regression model
lm(mpg~  vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD, data = car_df)
#create multiple linear regression model
multi_linear<-lm(mpg~  vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD, data = car_df)
#generate Summary
summary(multi_linear)
#create multiple linear regression model
multi_linear<-lm(mpg~  vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD, data = car_df)
#generate Summary
summary(multi_linear)
#create multiple linear regression model
lm(mpg~  vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD, data = car_df)
#import csv file and read as dataframe
car_df<- read.csv("Resources/MechaCar_mpg.csv",check.names = F, stringsAsFactors = F)
head(car_df)
#create multiple linear regression model
lm(mpg~  vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD, data = car_df)
#generate Summary
summary(multi_linear)
#import csv file and read as dataframe
car_df<- read.csv("Resources/MechaCar_mpg.csv",check.names = F, stringsAsFactors = F)
head(car_df)
#create multiple linear regression model
lm(mpg~  vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD, data = car_df)
#generate Summary
summary(lm(mpg~  vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD, data = car_df))
#generate Summary
summary(lm(mpg~  vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD, data = car_df))
#create multiple linear regression model
lm(mpg~  vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD, data = car_df)
#generate Summary
summary(lm(mpg~  vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD, data = car_df))
# read csv to DataFrame
coil_df <-read.csv("Resources/Suspension_Coil.csv")
head(coil_df)
total_summary<- coil_df %>% group_by(Manufacturing_Lot) %>% summarize(Mean = mean(PSI), Median =median(PSI), Variance = var(PSI), SD= sd(PSI), .groups = "keep")
total_summary
total_summary<- coil_df %>% summarize(Mean = mean(PSI), Median =median(PSI), Variance = var(PSI), SD= sd(PSI), .groups = "keep")
total_Summary
total_summary<- coil_df %>% summarize(Mean = mean(PSI), Median =median(PSI), Variance = var(PSI), SD= sd(PSI), .groups = "keep")
total_Summary
total_summary<- summarize(Mean = mean(PSI), Median =median(PSI), Variance = var(PSI), SD= sd(PSI), .groups = "keep")
total_summary<-coil_df %>% summarize(Mean = mean(PSI), Median =median(PSI), Variance = var(PSI), SD= sd(PSI), .groups = "keep")
total_Summary
total_summary<- coil_df %>% group_by(Manufacturing_Lot) %>% summarize(Mean = mean(PSI), Median =median(PSI), Variance = var(PSI), SD= sd(PSI), .groups = "keep")
total_summary
total_summary<- coil_df %>% summarize(Mean = mean(PSI), Median =median(PSI), Variance = var(PSI), SD= sd(PSI))
total_Summary
lot_summary<- coil_df %>% group_by(Manufacturing_Lot) %>% summarize(Mean = mean(PSI), Median =median(PSI), Variance = var(PSI), SD= sd(PSI), .groups = "keep")
lot_summary
total_summary <- coil_df %>% summarize(Mean = mean(PSI), Median =median(PSI), Variance = var(PSI), SD= sd(PSI))
total_Summary
total_summary
total_summary <- data.frame(coil_df %>% summarize(Mean = mean(PSI), Median =median(PSI), Variance = var(PSI), SD= sd(PSI)))
total_summary
total_summary <- data.frame(coil_df %>% summarize(Mean = mean(PSI), Median =median(PSI), Variance = var(PSI), SD= sd(PSI)))
total_summary
Mean <- mean(coil_df$PSI)
Mean <- mean(coil_df$PSI)
Median <- median(coil_df$PSI)
SD <- sd(coil_df$PSI)
Variance <- var(coil_df$PSI)
total_summary <- data.frame(Mean, Median, Variance, SD)
total_summary
total_summary <- data.frame(coil_df %>% summarize(Mean = mean(PSI), Median =median(PSI), Variance = var(PSI), SD= sd(PSI)))
total_summary
View(total_summary)
#generate summary for each lot
lot_summary<- coil_df %>% group_by(Manufacturing_Lot) %>% summarize(Mean = mean(PSI), Median =median(PSI), Variance = var(PSI), SD= sd(PSI), .groups = "keep")
lot_summary
View(lot_summary)
#generate summary for each lot
lot_summary<- coil_df %>% group_by(Manufacturing_Lot) %>% summarize(Mean = mean(PSI), Median =median(PSI), Variance = var(PSI), SD= sd(PSI), .groups = "keep")
lot_summary
total_summary <- coil_df %>% summarize(Mean = mean(PSI), Median =median(PSI), Variance = var(PSI), SD= sd(PSI),.groups="keep")
total_summary
View(total_summary)
view(lot_summary)
View(lot_summary)
View(total_summary)
Mean = mean(coil_df$PSI)
Mean
t.test(coil_df$PSI, mu=1500)
t.test(coil_df$PSI, mu=1500)
t.test(subest(coil_df,Manufacturing_Lot=="Lot1")$PSI, mu = mean(coil_df$PSI))
t.test(subset(coil_df,Manufacturing_Lot=="Lot1")$PSI, mu = mean(coil_df$PSI))
t.test(subset(coil_df,Manufacturing_Lot=="Lot2")$PSI, mu = mean(coil_df$PSI))
t.test(subset(coil_df,Manufacturing_Lot=="Lot3")$PSI, mu = mean(coil_df$PSI))
t.test(subset(coil_df,Manufacturing_Lot=="Lot1")$PSI, mu = mean(coil_df$PSI))
t.test(subset(coil_df,Manufacturing_Lot=="Lot2")$PSI, mu = mean(coil_df$PSI))
t.test(subset(coil_df,Manufacturing_Lot=="Lot3")$PSI, mu = mean(coil_df$PSI))
